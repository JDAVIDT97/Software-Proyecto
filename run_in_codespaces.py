#!/usr/bin/env python3
"""
Script optimizado para ejecutar SIPaKMeD en GitHub Codespaces
Maneja descarga autom√°tica de modelos y configuraci√≥n del ambiente
"""

import streamlit as st
import os
import sys
from pathlib import Path
import logging

# Configurar logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Agregar utils al path
current_dir = Path(__file__).parent
sys.path.append(str(current_dir))

def detect_environment():
    """Detectar el ambiente de ejecuci√≥n"""
    if os.path.exists("/workspaces") or os.getenv("CODESPACES") == "true":
        return "codespaces"
    elif os.getenv("STREAMLIT_SHARING") == "1":
        return "streamlit_cloud"
    else:
        return "local"

def setup_codespaces_environment():
    """Configurar ambiente espec√≠fico para Codespaces"""
    
    st.markdown("# üöÄ SIPaKMeD en GitHub Codespaces")
    st.markdown("### Configurando ambiente para an√°lisis de c√©lulas cervicales...")
    
    # Importar herramientas de descarga
    try:
        from app_utils.model_downloader import setup_models_for_codespaces
        
        # Configurar modelos
        models_ready = setup_models_for_codespaces()
        
        if models_ready:
            st.success("‚úÖ Ambiente configurado correctamente")
            st.markdown("### üéØ La aplicaci√≥n est√° lista para usar")
            st.markdown("**Para iniciar la aplicaci√≥n, ejecuta este comando en el terminal:**")
            st.code("streamlit run SIPaKMeD-Web/app_optimized.py", language="bash")
            st.markdown("O si est√°s en la carpeta SIPaKMeD-Web:")
            st.code("streamlit run app_optimized.py", language="bash")
            
            st.info("üí° **Tip:** Det√©n este script (Ctrl+C) y ejecuta el comando de arriba para abrir la aplicaci√≥n principal.")
        else:
            st.warning("‚ö†Ô∏è Es necesario descargar los modelos para continuar")
            
    except ImportError as e:
        st.error(f"Error importando m√≥dulos: {e}")
        st.info("Aseg√∫rate de instalar las dependencias con: `pip install -r requirements.txt`")

def main():
    """Funci√≥n principal"""
    
    # Configurar p√°gina
    st.set_page_config(
        page_title="SIPaKMeD Setup - GitHub Codespaces",
        page_icon="üî¨",
        layout="wide"
    )
    
    # Detectar ambiente
    env = detect_environment()
    
    if env == "codespaces":
        setup_codespaces_environment()
    elif env == "streamlit_cloud":
        st.error("‚ùå Streamlit Cloud no soporta modelos pesados. Usa GitHub Codespaces.")
        st.markdown("### Alternativas:")
        st.markdown("- üöÄ Usa [GitHub Codespaces](https://github.com/codespaces)")
        st.markdown("- üíª Ejecuta localmente con la versi√≥n SIPaKMeD-Training")
    else:
        # Ambiente local - redirigir directamente a la app
        st.info("üíª Ambiente local detectado. Ejecutando aplicaci√≥n principal...")
        
        # Importar y ejecutar app principal
        try:
            exec(open("app_optimized.py").read())
        except FileNotFoundError:
            st.error("app_optimized.py no encontrado. Aseg√∫rate de estar en el directorio correcto.")

if __name__ == "__main__":
    main()